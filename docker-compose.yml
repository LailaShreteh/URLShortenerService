version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: shortener-postgres
    environment:
      POSTGRES_DB: shortener
      POSTGRES_USER: shortener_user
      POSTGRES_PASSWORD: shortener_pass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shortener_user -d shortener || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: shortener-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 20

  app:
    build: .
    container_name: shortener-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # --- JDBC / JPA ---
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/shortener
      SPRING_DATASOURCE_USERNAME: shortener_user
      SPRING_DATASOURCE_PASSWORD: shortener_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: UTC
      # --- Flyway ---
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      # --- Redis (your RedisConfig reads spring.data.redis.*) ---
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: "6379"
      # SPRING_PROFILES_ACTIVE: docker

volumes:
  pgdata:
  redisdata: